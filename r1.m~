function [signal_point,new_data,new_bits] = r_2bit(r_reci,r_trans,t,n,e,data)

% Want to use a 4 dimensional signal space to send 5 bits (3 info 2 parity)
% We iterate over the message bits by 3
% 32 cases 
signal_point = 0;
on = 0; 
startup_delay = 1000; 
pause = 3; 
send_steps = 400; 
new_bits = []; 

new_data = data; 

f1_b10 = 1000; % b1 = 0
f2_b20 = 2000; % b2 = 0
f1_b11 = 4000; % b1 = 1
f2_b21 = 8000; % b2 = 1
 
%% Start doing stuff 

if isempty(data)
    data = [on startup_delay 0];
    new_data = data;
end

if data(1,1) == 0 % if on 
    if data(1,2) <= 0 % if done with startup delay
        if data(1,3) >= 0 % If still transmitting 
            if data(1,3)-1 > 0
                new_data(1,3) = data(1,3) - 1;
            else
                new_data(1,3) = 0;
                new_data(1,2) = 3;
                a1_b1_0 = sin(2*pi()*f1_b10*t(1,n-send_steps:n));
                a2_b2_0 = sin(2*pi()*f2_b20*t(1,n-send_steps:n));
                a1_b1_1 = sin(2*pi()*f1_b11*t(1,n-send_steps:n));
                a2_b2_1 = sin(2*pi()*f2_b21*t(1,n-send_steps:n));
                
                wave = r_trans(n-send_steps:n);
                
                dot1_b10 = dot(wave,a1_b1_0);
                dot2_b20 = dot(wave,a2_b2_0);
                dot1_b11 = dot(wave,a1_b1_1);
                dot2_b21 = dot(wave,a2_b2_1);               
                
                if (dot1_b10 < 0)
                    b1 = 0;
                elseif (dot1_b11 > 0)
                    b1 = 1;
                else
                    fprintf("oops b1" + newline)
                    b1 = 1;
                end
                if (dot2_b20 < 0)
                    b2 = 0;
                elseif(dot2_b21 > 0)
                    b2 = 1;
                else
                    fprintf("oops b2" + newline)
                    b2 = 1;
                end
                
                new_bits = [b1,b2];  % Don't need to write new_bits
             
            end
        end
    else
        %disp("please god here at least") 
        % Countdown startup delay
        if data(1,2)-1 > 0
            new_data(1,2) = data(1,2) - 1;
        else
            % Start new broadcast 
            
            new_data(1,2) = 0;
            new_data(1,3) = send_steps;
        end
    end
end

end


